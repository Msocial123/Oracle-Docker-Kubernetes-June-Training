   5 podman ps
   6 podman images
   7 clear
   8 podman build -t flipkart-clone-app:1.0 .
   9 podman images
  10 podman inspect localhost/flipkart-clone-app:1.0
  11 podman ps -a
  12 podman rm -f 0626a6c8a299
  13 podman rm -f a802014458bc
  14 podman rm -f 47bd2f806e84
  15 podman ps -a
  16 podman rm -f 5d809b320a87
  17 podman images
  18 podman run -td --name flip-web -p 8087:80 localhost/flipkart-clone-app:1.0
  19 podman login docker.io
  20 podman tag localhost/flipkart-clone-app:1.0 muralisocial123/flipkart-clone-app:1.0
  21 podman images
  22 podman tag localhost/flipkart-clone-app:1.0 docker.io/muralisocial123/flipkart-clone-app:1.0
  23 podman images
  24 podman push docker.io/muralisocial123/flipkart-clone-app:1.0
  25 podman images

  ******************************************

   7 podman build -t flower-app-test:1.0 .
   8 podman build -t flower-app-test:1.0 .
   9 podman images
  10 podman run -td --name test-web-app -p 3016:3015 localhost/flower-app-test:1.0
  11 podman ps
  12 clear

  *************************
   2 podman build -t test-maven-web-app:1.0 .
   3 clear
   4 docker images
   5 clear
   6 podman images
   7 podman run -td --name example-web -p 8080:8080 localhost/test-maven-web-app:1.0

***************************
 2 podman build -t python-app:1.0 .
   3 podman run -td --name pyhton-example -p 5000:5000 python-app:1.0
   4 podman ps
***************************************

FROM maven:3.9-amazoncorretto-21 AS build
WORKDIR /opt/shipping
COPY pom.xml /opt/shipping
COPY src /opt/shipping/src/
RUN mvn clean package -DskipTests

FROM openjdk:8-jre-alpine
EXPOSE 8080
WORKDIR /opt/shipping
ENV CART_ENDPOINT=cart:8080
ENV DB_HOST=mysql
COPY --from=build /opt/shipping/target/shipping-1.0.jar shipping.jar
CMD [ "java", "-Xmn256m", "-Xmx768m", "-jar", "shipping.jar" ]

**************************************************************************
   78  podman run -it --name C1 -v /Murali ubuntu /bin/bash
   79  podman volume ls
   80  cd /home/user/.local/share/containers/storage/volumes
   81  ls
   82  cd 88781d240bf35cdcc99440f5e5d1e9944fcc6de08efa7ccac3c94d6dd8dc32b5
   83  ls
   84  cd _data
   85  ls
   86  podman ps
   87  podman rm -f C1
   88  ls
   89  cd /home/user
   90  clear
   91  podman run -it --name C1 -v /Murali ubuntu /bin/bash
   92  podman volume ls
   93  podman ps
   94  podman inspect C1
   95  podman rm -f C1
   96  volume ls
   97  podman volume ls
   98  cd /home/user/.local/share/containers/storage/volumes
   99  ls
  100  cd 54ca8b393ca802f9a3c44d26dbd0630d187ec928392ac57b8d2ccae504bf42f8
  101  ls
  102  cd _data
  103  ls
  104  cd /home/user
  105  clear
  106  podman run -it --name C1 -v mydata:/Mohan ubuntu /bin/bash
  107  podman volume ls
  108  podman inspect C1
  109  podman ps
********************************************
  106  podman run -it --name C1 -v mydata:/Mohan ubuntu /bin/bash
  107  podman volume ls
  108  podman inspect C1
  109  podman ps
  110  history
  111  ls
  112  mkdir DevOps
  113  cd DevOps
  114  pwd
  115  pwd
  116  cd ..
  117  podman run -it --name D1 -v /home/user/DevOps:/Sample ubuntu /bin/bash
  118  ls
  119  cd DevOps
  120  ls
  121  podman inspect D1
  122  touch DevSecOps
  123  podman exec -it D1 /bin/bash
  124  cd ..
  125  podman run -it --name E1 --privileged=true --volumes-from D1 ubuntu /bin/bash  