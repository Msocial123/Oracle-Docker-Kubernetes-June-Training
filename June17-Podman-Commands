   5 podman ps
   6 podman images
   7 clear
   8 podman build -t flipkart-clone-app:1.0 .
   9 podman images
  10 podman inspect localhost/flipkart-clone-app:1.0
  11 podman ps -a
  12 podman rm -f 0626a6c8a299
  13 podman rm -f a802014458bc
  14 podman rm -f 47bd2f806e84
  15 podman ps -a
  16 podman rm -f 5d809b320a87
  17 podman images
  18 podman run -td --name flip-web -p 8087:80 localhost/flipkart-clone-app:1.0
  19 podman login docker.io
  20 podman tag localhost/flipkart-clone-app:1.0 muralisocial123/flipkart-clone-app:1.0
  21 podman images
  22 podman tag localhost/flipkart-clone-app:1.0 docker.io/muralisocial123/flipkart-clone-app:1.0
  23 podman images
  24 podman push docker.io/muralisocial123/flipkart-clone-app:1.0
  25 podman images

  ******************************************

   7 podman build -t flower-app-test:1.0 .
   8 podman build -t flower-app-test:1.0 .
   9 podman images
  10 podman run -td --name test-web-app -p 3016:3015 localhost/flower-app-test:1.0
  11 podman ps
  12 clear

  *************************
   2 podman build -t test-maven-web-app:1.0 .
   3 clear
   4 docker images
   5 clear
   6 podman images
   7 podman run -td --name example-web -p 8080:8080 localhost/test-maven-web-app:1.0

***************************
 2 podman build -t python-app:1.0 .
   3 podman run -td --name pyhton-example -p 5000:5000 python-app:1.0
   4 podman ps
***************************************

FROM maven:3.9-amazoncorretto-21 AS build
WORKDIR /opt/shipping
COPY pom.xml /opt/shipping
COPY src /opt/shipping/src/
RUN mvn clean package -DskipTests

FROM openjdk:8-jre-alpine
EXPOSE 8080
WORKDIR /opt/shipping
ENV CART_ENDPOINT=cart:8080
ENV DB_HOST=mysql
COPY --from=build /opt/shipping/target/shipping-1.0.jar shipping.jar
CMD [ "java", "-Xmn256m", "-Xmx768m", "-jar", "shipping.jar" ]